Features:

Design questions / Ideas:
- Figure out where the logger configuration logic belongs in the Launcher/BehaviorServer relationship
- Should the default logger go to STDERR or STDOUT?
- Break the Behaviors out into several files and test files?
- Log every request to the server/behavior, in addition to open, close.  For this to work, it would have to be the
  behavior's responsibility, since GServer#serve gets called only once for the lifetime of the connection.

Future Behaviors:
- Create a more configurable version of the DelugeResponse which allows for a header, footer, content and times to repeat.
- Write the remaining bad HTTP behaviors.  In addition, we may want to replace the NaiveHttpResponse with something
  from the standard Ruby library, so that there's less code in this project, and so we know that we're
  following the HTTP protocol.
- Have a tiny listen queue (queue size 0) and a connection never gets into the queue
- Have a giant listen queue (queue size max?) and only one thread processing -- times out in the listen queue
- Close the write part of the connection, but not the read
- Close the read part of the connection, but not the write
- "Bind to a socket but then never service a single connection attempt" (p. 128 RI!)